-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Gql.DockerAPI.Object.Container exposing (..)

import Gql.DockerAPI.InputObject
import Gql.DockerAPI.Interface
import Gql.DockerAPI.Object
import Gql.DockerAPI.Scalar
import Gql.DockerAPI.ScalarCodecs
import Gql.DockerAPI.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| -}
id : SelectionSet Gql.DockerAPI.ScalarCodecs.Id Gql.DockerAPI.Object.Container
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Gql.DockerAPI.ScalarCodecs.codecs |> Gql.DockerAPI.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| -}
names : SelectionSet (Maybe (List (Maybe String))) Gql.DockerAPI.Object.Container
names =
    Object.selectionForField "(Maybe (List (Maybe String)))" "names" [] (Decode.string |> Decode.nullable |> Decode.list |> Decode.nullable)


{-| -}
image : SelectionSet (Maybe String) Gql.DockerAPI.Object.Container
image =
    Object.selectionForField "(Maybe String)" "image" [] (Decode.string |> Decode.nullable)


{-| -}
imageId : SelectionSet (Maybe String) Gql.DockerAPI.Object.Container
imageId =
    Object.selectionForField "(Maybe String)" "imageId" [] (Decode.string |> Decode.nullable)


{-| -}
command : SelectionSet (Maybe String) Gql.DockerAPI.Object.Container
command =
    Object.selectionForField "(Maybe String)" "command" [] (Decode.string |> Decode.nullable)


{-| -}
created : SelectionSet (Maybe Gql.DockerAPI.ScalarCodecs.Long) Gql.DockerAPI.Object.Container
created =
    Object.selectionForField "(Maybe ScalarCodecs.Long)" "created" [] (Gql.DockerAPI.ScalarCodecs.codecs |> Gql.DockerAPI.Scalar.unwrapCodecs |> .codecLong |> .decoder |> Decode.nullable)


{-| -}
state : SelectionSet (Maybe String) Gql.DockerAPI.Object.Container
state =
    Object.selectionForField "(Maybe String)" "state" [] (Decode.string |> Decode.nullable)


{-| -}
status : SelectionSet (Maybe String) Gql.DockerAPI.Object.Container
status =
    Object.selectionForField "(Maybe String)" "status" [] (Decode.string |> Decode.nullable)


{-| -}
ports : SelectionSet decodesTo Gql.DockerAPI.Object.PortMapping -> SelectionSet (Maybe (List (Maybe decodesTo))) Gql.DockerAPI.Object.Container
ports object_ =
    Object.selectionForCompositeField "ports" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| -}
labels : SelectionSet (Maybe Gql.DockerAPI.ScalarCodecs.StringAnyMap) Gql.DockerAPI.Object.Container
labels =
    Object.selectionForField "(Maybe ScalarCodecs.StringAnyMap)" "labels" [] (Gql.DockerAPI.ScalarCodecs.codecs |> Gql.DockerAPI.Scalar.unwrapCodecs |> .codecStringAnyMap |> .decoder |> Decode.nullable)


{-| -}
sizeRw : SelectionSet (Maybe Gql.DockerAPI.ScalarCodecs.Long) Gql.DockerAPI.Object.Container
sizeRw =
    Object.selectionForField "(Maybe ScalarCodecs.Long)" "sizeRw" [] (Gql.DockerAPI.ScalarCodecs.codecs |> Gql.DockerAPI.Scalar.unwrapCodecs |> .codecLong |> .decoder |> Decode.nullable)


{-| -}
sizeRootFs : SelectionSet (Maybe Gql.DockerAPI.ScalarCodecs.Long) Gql.DockerAPI.Object.Container
sizeRootFs =
    Object.selectionForField "(Maybe ScalarCodecs.Long)" "sizeRootFs" [] (Gql.DockerAPI.ScalarCodecs.codecs |> Gql.DockerAPI.Scalar.unwrapCodecs |> .codecLong |> .decoder |> Decode.nullable)


{-| -}
networkSettings : SelectionSet decodesTo Gql.DockerAPI.Object.NetworkSettings -> SelectionSet (Maybe decodesTo) Gql.DockerAPI.Object.Container
networkSettings object_ =
    Object.selectionForCompositeField "networkSettings" [] object_ (identity >> Decode.nullable)


{-| -}
mounts : SelectionSet decodesTo Gql.DockerAPI.Object.ContainerMount -> SelectionSet (Maybe (List (Maybe decodesTo))) Gql.DockerAPI.Object.Container
mounts object_ =
    Object.selectionForCompositeField "mounts" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| -}
details : SelectionSet decodesTo Gql.DockerAPI.Object.ContainerDetails -> SelectionSet (Maybe decodesTo) Gql.DockerAPI.Object.Container
details object_ =
    Object.selectionForCompositeField "details" [] object_ (identity >> Decode.nullable)


type alias ProcessesOptionalArguments =
    { ps_args : OptionalArgument String }


{-|

  - ps\_args -

-}
processes : (ProcessesOptionalArguments -> ProcessesOptionalArguments) -> SelectionSet decodesTo Gql.DockerAPI.Object.TopResults -> SelectionSet (Maybe decodesTo) Gql.DockerAPI.Object.Container
processes fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { ps_args = Absent }

        optionalArgs =
            [ Argument.optional "ps_args" filledInOptionals.ps_args Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "processes" optionalArgs object_ (identity >> Decode.nullable)


{-| -}
stats : SelectionSet decodesTo Gql.DockerAPI.Object.ContainerStats -> SelectionSet (Maybe decodesTo) Gql.DockerAPI.Object.Container
stats object_ =
    Object.selectionForCompositeField "stats" [] object_ (identity >> Decode.nullable)


type alias LogsOptionalArguments =
    { follow : OptionalArgument Bool
    , stdout : OptionalArgument Bool
    , stderr : OptionalArgument Bool
    , since : OptionalArgument Int
    , timestamps : OptionalArgument Bool
    , lines : OptionalArgument Int
    , customParams : OptionalArgument Gql.DockerAPI.ScalarCodecs.StringAnyMap
    }


{-|

  - follow -
  - stdout -
  - stderr -
  - since -
  - timestamps -
  - lines -
  - customParams -

-}
logs : (LogsOptionalArguments -> LogsOptionalArguments) -> SelectionSet (Maybe String) Gql.DockerAPI.Object.Container
logs fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { follow = Absent, stdout = Absent, stderr = Absent, since = Absent, timestamps = Absent, lines = Absent, customParams = Absent }

        optionalArgs =
            [ Argument.optional "follow" filledInOptionals.follow Encode.bool, Argument.optional "stdout" filledInOptionals.stdout Encode.bool, Argument.optional "stderr" filledInOptionals.stderr Encode.bool, Argument.optional "since" filledInOptionals.since Encode.int, Argument.optional "timestamps" filledInOptionals.timestamps Encode.bool, Argument.optional "lines" filledInOptionals.lines Encode.int, Argument.optional "customParams" filledInOptionals.customParams (Gql.DockerAPI.ScalarCodecs.codecs |> Gql.DockerAPI.Scalar.unwrapEncoder .codecStringAnyMap) ]
                |> List.filterMap identity
    in
    Object.selectionForField "(Maybe String)" "logs" optionalArgs (Decode.string |> Decode.nullable)


{-| -}
changes : SelectionSet decodesTo Gql.DockerAPI.Object.ContainerChange -> SelectionSet (Maybe (List (Maybe decodesTo))) Gql.DockerAPI.Object.Container
changes object_ =
    Object.selectionForCompositeField "changes" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| -}
portsAsString : SelectionSet (Maybe String) Gql.DockerAPI.Object.Container
portsAsString =
    Object.selectionForField "(Maybe String)" "portsAsString" [] (Decode.string |> Decode.nullable)
